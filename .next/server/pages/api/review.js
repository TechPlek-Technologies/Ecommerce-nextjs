"use strict";(()=>{var e={};e.id=2514,e.ids=[2514],e.modules={11185:e=>{e.exports=require("mongoose")},60614:e=>{e.exports=require("next-auth/jwt")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},72242:(e,s,a)=>{a.r(s),a.d(s,{config:()=>l,default:()=>p,routeModule:()=>m});var t={};a.r(t),a.d(t,{default:()=>apiHandler});var r=a(71802),i=a(47153),n=a(56249),d=a(60614),u=a(10090),o=a(28434),c=a(13808);async function apiHandler(e,s){let{method:a}=e,t=process.env.AUTH_SECRET,r=await (0,d.getToken)({req:e,secret:t});if(!r)return s.status(403).json({success:!1,message:"Access Forbidden"});if(await (0,c.Z)(),"POST"===a)try{let{pid:a,oid:t,rating:i,comment:n}=e.body,d={userName:r.user.name,email:r.user.email,rating:i,comment:n};await o.Z.findByIdAndUpdate(a,{$push:{review:d}}),await u.Z.findOneAndUpdate({orderId:t,"products._id":a},{$set:{"products.$.review":!0}}),s.status(200).json({success:!0})}catch(e){console.log(e),s.status(500).json({success:!1})}else s.status(400).json({success:!1})}let p=(0,n.l)(t,"default"),l=(0,n.l)(t,"config"),m=new r.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/review",pathname:"/api/review",bundlePath:"",filename:""},userland:t})}};var s=require("../../webpack-api-runtime.js");s.C(e);var __webpack_exec__=e=>s(s.s=e),a=s.X(0,[4222,9305,3808],()=>__webpack_exec__(72242));module.exports=a})();