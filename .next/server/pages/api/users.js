"use strict";(()=>{var e={};e.id=2829,e.ids=[2829],e.modules={11185:e=>{e.exports=require("mongoose")},60614:e=>{e.exports=require("next-auth/jwt")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},8553:(e,s,t)=>{t.r(s),t.d(s,{config:()=>l,default:()=>d,routeModule:()=>p});var a={};t.r(a),t.d(a,{default:()=>apiHandler});var r=t(71802),i=t(47153),u=t(56249),c=t(58364),n=t(16572),o=t(13808);async function apiHandler(e,s){let{method:t}=e;if(!await (0,c.Z)(e,"customers"))return s.status(403).json({success:!1,message:"Access Forbidden"});switch(await (0,o.Z)(),t){case"GET":try{let e=await n.Z.find({isAdmin:!1}).select(["-hash","-salt","-isAdmin"]).sort("-createdAt");s.status(200).json({success:!0,users:e})}catch(e){s.status(500).json({success:!1})}break;case"DELETE":try{await n.Z.findByIdAndRemove(e.query.id),s.status(200).json({success:!0})}catch(e){console.log(e),s.status(500).json({success:!1})}break;default:s.status(400).json({success:!1})}}let d=(0,u.l)(a,"default"),l=(0,u.l)(a,"config"),p=new r.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/users",pathname:"/api/users",bundlePath:"",filename:""},userland:a})}};var s=require("../../webpack-api-runtime.js");s.C(e);var __webpack_exec__=e=>s(s.s=e),t=s.X(0,[4222,9305,3808,8364],()=>__webpack_exec__(8553));module.exports=t})();