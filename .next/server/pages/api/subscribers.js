"use strict";(()=>{var e={};e.id=8671,e.ids=[8671],e.modules={11185:e=>{e.exports=require("mongoose")},60614:e=>{e.exports=require("next-auth/jwt")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},9859:(e,s,a)=>{a.r(s),a.d(s,{config:()=>l,default:()=>d,routeModule:()=>p});var t={};a.r(t),a.d(t,{default:()=>apiHandler});var r=a(71802),u=a(47153),i=a(56249),c=a(58364),n=a(27979),o=a(13808);async function apiHandler(e,s){let{method:a}=e;if(!await (0,c.Z)(e,"subscriber"))return s.status(403).json({success:!1,message:"Access Forbidden"});switch(await (0,o.Z)(),a){case"GET":try{let e=await n.Z.findOne({});s.status(200).json({success:!0,subscribers:e||[]})}catch(e){s.status(500).json({success:!1})}break;case"DELETE":try{await n.Z.updateOne({},{$pull:{subscribers:{_id:e.query.id}}}),s.status(200).json({success:!0})}catch(e){console.log(e),s.status(500).json({success:!1})}break;default:s.status(400).json({success:!1})}}let d=(0,i.l)(t,"default"),l=(0,i.l)(t,"config"),p=new r.PagesAPIRouteModule({definition:{kind:u.x.PAGES_API,page:"/api/subscribers",pathname:"/api/subscribers",bundlePath:"",filename:""},userland:t})}};var s=require("../../webpack-api-runtime.js");s.C(e);var __webpack_exec__=e=>s(s.s=e),a=s.X(0,[4222,9305,3808,8364],()=>__webpack_exec__(9859));module.exports=a})();